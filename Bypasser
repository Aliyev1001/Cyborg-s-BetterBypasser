if not getgenv() then
    return
end

if not getgenv().method or getgenv().method == nil then
    getgenv().method = "" -- You can change it to whatever you want, it will show up at end of you sentence (Script words)
end

repeat
    wait()
until game:IsLoaded()

local Players = game:GetService("Players")
local Chat = game:GetService("Chat")

local playerFrom = Players.LocalPlayer
local message = "C7RN"

local filteredString = Chat:FilterStringForBroadcast(message, playerFrom)

local queueonteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
queueonteleport(
    "loadstring(game:HttpGet('https://raw.githubusercontent.com/daddysyn/synergy/additional/betterbypasser'))()"
)

function execute()
    local NotificationHolder =
        loadstring(game:HttpGet("https://raw.githubusercontent.com/AbstractPoo/Main/main/Notifications.lua", true))()
    local requestt =
        syn and syn.request or http and http.request or http_request or fluxus and fluxus.request or request
    local httpservice = game:GetService("HttpService")
    if
        syn and "Synapse X"
     --
     then
        -- This basically makes roblox unable to log your chat messages sent in-game. Meaning if you get reported for saying something bad, you won't get banned!
        -- Store in autoexec folder
        -- Credits: AnthonyIsntHere and ArianBlaack and Cyborg

        --[[
			Change-logs:
			8/22/2022 - Fixed Chat gui glitching on some games such as Prison Life.
		]] local ACL_LoadTime =
            tick()

        local CoreGui = game:GetService("CoreGui")
        local StarterGui = game:GetService("StarterGui")
        local TweenService = game:GetService("TweenService")
        local Players = game:GetService("Players")

        local Player = Players.LocalPlayer

        local PlayerGui = Player:FindFirstChildWhichIsA("PlayerGui")
        do
            if not PlayerGui then
                repeat
                    task.wait()
                until Player:FindFirstChildWhichIsA("PlayerGui")
                PlayerGui = Player:FindFirstChildWhichIsA("PlayerGui")
            end
        end

        local Notify = function(_Title, _Text, Time)
            StarterGui:SetCore(
                "SendNotification",
                {Title = _Title, Text = _Text, Icon = "rbxassetid://2541869220", Duration = Time}
            )
        end
		-- Cyborg was here
        local Tween = function(Object, Time, Style, Direction, Property)
            return TweenService:Create(
                Object,
                TweenInfo.new(Time, Enum.EasingStyle[Style], Enum.EasingDirection[Direction]),
                Property
            )
        end

        local Insert = function(Tbl, ...)
            for _, x in next, {...} do
                table.insert(Tbl, x)
            end
        end

        local ChatFixToggle = true
        local CoreGuiSettings = {}
        local ChatFix

        ChatFix =
            hookmetamethod(
            StarterGui,
            "__namecall",
            function(self, ...)
                local Method = getnamecallmethod()
                local Arguments = {...}

                if not checkcaller() and ChatFixToggle and Method == "SetCoreGuiEnabled" then
                    local CoreGuiType = Arguments[1]
                    local SettingValue = Arguments[2]

                    if CoreGuiType == ("All" or "Chat") then
                        Insert(CoreGuiSettings, CoreGuiType, SettingValue)
                        return
                    end
                end

                return ChatFix(self, ...)
            end
        )

        local ACLWarning = Instance.new("ScreenGui")
        local Background = Instance.new("Frame")
        local Top = Instance.new("Frame")
        local Exit = Instance.new("TextButton")
        local UICorner = Instance.new("UICorner")
        local WarningLbl = Instance.new("TextLabel")
        local Loading = Instance.new("Frame")
        local Bar = Instance.new("Frame")
        local WarningBackground = Instance.new("Frame")
        local WarningFrame = Instance.new("Frame")
        local Despair = Instance.new("TextLabel")
        local UIListLayout = Instance.new("UIListLayout")
        local Reason_1 = Instance.new("TextLabel")
        local Reason_2 = Instance.new("TextLabel")
        local Trollge = Instance.new("ImageLabel")
        local UIPadding = Instance.new("UIPadding")

        local MakeGuiThread =
            coroutine.wrap(
            function()
                syn.protect_gui(ACLWarning)

                ACLWarning.Name = "ACL Warning"
                ACLWarning.Parent = CoreGui
                ACLWarning.Enabled = false
                ACLWarning.DisplayOrder = -2147483648

                Background.Name = "Background"
                Background.Parent = ACLWarning
                Background.AnchorPoint = Vector2.new(0.5, 0.5)
                Background.BackgroundColor3 = Color3.fromRGB(21, 0, 0)
                Background.BorderSizePixel = 0
                Background.Position = UDim2.new(0.5, 0, 0.5, 0)
                Background.Size = UDim2.new(0.300000012, 0, 0.5, 0)

                Top.Name = "Top"
                Top.Parent = Background
                Top.AnchorPoint = Vector2.new(0.5, 0.5)
                Top.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                Top.BorderSizePixel = 0
                Top.Position = UDim2.new(0.5, 0, 0.100000001, 0)
                Top.Size = UDim2.new(0.899999976, 0, 0.100000001, 0)

                Exit.Name = "Exit"
                Exit.Parent = Top
                Exit.AnchorPoint = Vector2.new(0.5, 0.5)
                Exit.BackgroundColor3 = Color3.fromRGB(38, 0, 0)
                Exit.Position = UDim2.new(0.949999988, 0, 0.5, 0)
                Exit.Size = UDim2.new(0.100000001, -6, 1, -9)
                Exit.Visible = false
                Exit.Font = Enum.Font.Arcade
                Exit.Text = "X"
                Exit.TextColor3 = Color3.fromRGB(255, 255, 255)
                Exit.TextScaled = true
                Exit.TextSize = 14.000
                Exit.TextWrapped = true

                UICorner.CornerRadius = UDim.new(0.200000003, 0)
                UICorner.Parent = Exit

                WarningLbl.Name = "WarningLbl"
                WarningLbl.Parent = Top
                WarningLbl.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                WarningLbl.BackgroundTransparency = 1.000
                WarningLbl.Position = UDim2.new(0, 17, 0, 0)
                WarningLbl.Size = UDim2.new(0.5, 0, 1, 0)
                WarningLbl.Font = Enum.Font.Arcade
                WarningLbl.Text = "Warning!"
                WarningLbl.TextColor3 = Color3.fromRGB(255, 255, 255)
                WarningLbl.TextScaled = true
                WarningLbl.TextSize = 14.000
                WarningLbl.TextWrapped = true
                WarningLbl.TextXAlignment = Enum.TextXAlignment.Left

                Loading.Name = "Loading"
                Loading.Parent = Top
                Loading.AnchorPoint = Vector2.new(0.5, 0.5)
                Loading.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
                Loading.BorderSizePixel = 0
                Loading.Position = UDim2.new(0.699999988, 0, 0.5, 0)
                Loading.Size = UDim2.new(0.349999994, 0, 0.0199999996, 0)

                Bar.Name = "Bar"
                Bar.Parent = Loading
                Bar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Bar.BorderSizePixel = 0
                Bar.Size = UDim2.new(0, 0, 1, 0)

                WarningBackground.Name = "WarningBackground"
                WarningBackground.Parent = Background
                WarningBackground.AnchorPoint = Vector2.new(0.5, 0.5)
                WarningBackground.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
                WarningBackground.BorderSizePixel = 0
                WarningBackground.Position = UDim2.new(0.5, 0, 0.550000012, 0)
                WarningBackground.Size = UDim2.new(0.899999976, 0, 0.800000012, 0)

                WarningFrame.Name = "WarningFrame"
                WarningFrame.Parent = WarningBackground
                WarningFrame.AnchorPoint = Vector2.new(0.5, 0.5)
                WarningFrame.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
                WarningFrame.BorderSizePixel = 0
                WarningFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
                WarningFrame.Size = UDim2.new(0.899999976, 0, 0.899999976, 0)

                Despair.Name = "Despair"
                Despair.Parent = WarningFrame
                Despair.AnchorPoint = Vector2.new(0.5, 0.5)
                Despair.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
                Despair.BackgroundTransparency = 1.000
                Despair.BorderColor3 = Color3.fromRGB(27, 42, 53)
                Despair.BorderSizePixel = 0
                Despair.Position = UDim2.new(0.5, 0, 0.100000001, 0)
                Despair.Size = UDim2.new(0.949999988, 0, 0.119999997, 0)
                Despair.Font = Enum.Font.Oswald
                Despair.Text = "Anti Chat Logger will not work here!"
                Despair.TextColor3 = Color3.fromRGB(255, 255, 255)
                Despair.TextScaled = true
                Despair.TextSize = 50.000
                Despair.TextWrapped = true
                Despair.TextYAlignment = Enum.TextYAlignment.Top

                UIListLayout.Parent = WarningFrame
                UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
                UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
                UIListLayout.Padding = UDim.new(0, 15)

                Reason_1.Name = "Reason_1"
                Reason_1.Parent = WarningFrame
                Reason_1.AnchorPoint = Vector2.new(0.5, 0.5)
                Reason_1.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
                Reason_1.BackgroundTransparency = 1.000
                Reason_1.BorderColor3 = Color3.fromRGB(27, 42, 53)
                Reason_1.BorderSizePixel = 0
                Reason_1.Position = UDim2.new(0.5, 0, 0.100000001, 0)
                Reason_1.Size = UDim2.new(0.949999988, 0, 0.100000001, 0)
                Reason_1.Visible = false
                Reason_1.Font = Enum.Font.Oswald
                Reason_1.Text = "-Chat Module was not found."
                Reason_1.TextColor3 = Color3.fromRGB(255, 0, 0)
                Reason_1.TextScaled = true
                Reason_1.TextSize = 50.000
                Reason_1.TextWrapped = true
                Reason_1.TextYAlignment = Enum.TextYAlignment.Top

                Reason_2.Name = "Reason_2"
                Reason_2.Parent = WarningFrame
                Reason_2.AnchorPoint = Vector2.new(0.5, 0.5)
                Reason_2.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
                Reason_2.BackgroundTransparency = 1.000
                Reason_2.BorderColor3 = Color3.fromRGB(27, 42, 53)
                Reason_2.BorderSizePixel = 0
                Reason_2.Position = UDim2.new(0.5, 0, 0.100000001, 0)
                Reason_2.Size = UDim2.new(0.949999988, 0, 0.100000001, 0)
                Reason_2.Visible = false
                Reason_2.Font = Enum.Font.Oswald
                Reason_2.Text = "-MessagePosted function is invalid."
                Reason_2.TextColor3 = Color3.fromRGB(255, 0, 0)
                Reason_2.TextScaled = true
                Reason_2.TextSize = 50.000
                Reason_2.TextWrapped = true
                Reason_2.TextYAlignment = Enum.TextYAlignment.Top

                Trollge.Name = "Trollge"
                Trollge.Parent = WarningFrame
                Trollge.AnchorPoint = Vector2.new(0.5, 0.5)
                Trollge.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Trollge.BackgroundTransparency = 1.000
                Trollge.Position = UDim2.new(0.5, 0, 0.670000017, 0)
                Trollge.Size = UDim2.new(0.449999988, 0, 0.5, 0)
                Trollge.Image = "rbxassetid://10104834800"

                UIPadding.Parent = WarningFrame
                UIPadding.PaddingTop = UDim.new(0, 10)

                Exit.MouseButton1Click:Connect(
                    function()
                        local UpTween = Tween(Background, .2, "Quint", "Out", {Position = UDim2.new(0.5, 0, 0.45, 0)})
                        local DownTween = Tween(Background, 1, "Quad", "Out", {Position = UDim2.new(0.5, 0, 2, 0)})
                        UpTween:Play()
                        UpTween.Completed:wait()
                        DownTween:Play()
                        DownTween.Completed:wait()
                        ACLWarning:Destroy()
                    end
                )
            end
        )()

        local ExitCooldown = function()
            wait(3)
            local Tween = Tween(Bar, 5, "Quad", "InOut", {Size = UDim2.new(1, 0, 1, 0)})
            Tween:Play()
            Tween.Completed:wait()
            Loading:Destroy()
            Exit.Visible = true
        end

        local PlayerScripts = Player:WaitForChild("PlayerScripts")
        local ChatMain = PlayerScripts:FindFirstChild("ChatMain", true) or false

        if not ChatMain then
            local Timer = tick()
            repeat
                task.wait()
            until PlayerScripts:FindFirstChild("ChatMain", true) or tick() > (Timer + 3)
            ChatMain = PlayerScripts:FindFirstChild("ChatMain", true)
            if not ChatMain then
                ACLWarning.Enabled = true
                Reason_1.Visible = true
                ExitCooldown()
                return
            end
        end

        local PostMessage = require(ChatMain).MessagePosted

        if not PostMessage then
            ACLWarning.Enabled = true
            Reason_2.Visible = true
            ExitCooldown()
            return
        end

        local MessageEvent = Instance.new("BindableEvent")
        local OldFunctionHook
        OldFunctionHook =
            hookfunction(
            PostMessage.fire,
            function(self, Message)
                if not checkcaller() and self == PostMessage then
                    MessageEvent:Fire(Message)
                    return
                end
                return OldFunctionHook(self, Message)
            end
        )

        if setfflag then
            setfflag("AbuseReportScreenshot", "False")
            setfflag("AbuseReportScreenshotPercentage", 0)
        end

        ChatFixToggle = false
        ACLWarning:Destroy()
        if OldSetting then
            StarterGui:SetCoreGuiEnabled(CoreGuiSettings[1], CoreGuiSettings[2])
        end
        Notify("Loaded Successfully", "Anti Chat and Screenshot Logger Loaded!", 15)
        print(string.format("Anti Chat-Logger has loaded in %s seconds.", tostring(tick() - ACL_LoadTime):sub(1, 4)))
    elseif fluxus or identifyexecutor() == "Evon" then
        if not game:IsLoaded() then
            game.Loaded:wait()
        end
        local d = game:GetService("Players")
        local e = d.LocalPlayer or d.PlayerAdded:wait()
        local f =
            require(e:WaitForChild("PlayerScripts"):WaitForChild("ChatScript"):WaitForChild("ChatMain")).MessagePosted
        MessageEvent = Instance.new("BindableEvent")
        local g
        local h = function(self, i)
            if not checkcaller() and self == f then
                MessageEvent:Fire(i)
                return
            end
            return g(self, i)
        end
        g = hookfunction(f.fire, h)
    elseif IS_KRNL_LOADED then
        local j = true
        local k = require(game:GetService("Players").LocalPlayer.PlayerScripts.ChatScript.ChatMain)
        local l = {
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "m",
            "n",
            "l",
            "o",
            "p",
            "q",
            "r",
            "s",
            "t",
            "u",
            "v",
            "w",
            "x",
            "y",
            "z",
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H",
            "I",
            "J",
            "K",
            "M",
            "N",
            "L",
            "O",
            "P",
            "Q",
            "R",
            "S",
            "T",
            "U",
            "V",
            "W",
            "X",
            "Y",
            "Z",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "0",
            "/",
            "@",
            "?"
        }
        local m = Instance.new("BindableEvent")
        m.Name = "MessagePosted"
        local n = k.MessagePosted
        k.MessagePosted = m
        function IsBlacklisted(o)
            if table.find(l, o) ~= nil then
                return true
            end
            return false
        end
        m.Event:Connect(
            function(p)
                if IsBlacklisted(string.sub(p, 1, 1)) == true then
                    if j == true then
                        printconsole("[LOGS]: Prevented " .. tostring(p) .. " to be in Chatted!")
                    end
                elseif IsBlacklisted(string.sub(p, 1, 1)) == false then
                    n:fire(p)
                    if j == true then
                        printconsole("[LOGS]: Sent command " .. tostring(p) .. " to be in Chatted!")
                    end
                end
            end
        )
    else
        if not game:IsLoaded() then
            game.Loaded:wait()
        end
        local d = game:GetService("Players")
        local e = d.LocalPlayer or d.PlayerAdded:wait()
        local f =
            require(e:WaitForChild("PlayerScripts"):WaitForChild("ChatScript"):WaitForChild("ChatMain")).MessagePosted
        MessageEvent = Instance.new("BindableEvent")
        local g
        local h = function(self, i)
            if not checkcaller() and self == f then
                MessageEvent:Fire(i)
                return
            end
            return g(self, i)
        end
        g = hookfunction(f.fire, h)
    end
    if not LOADED then
        NotificationHolder:message {
            Title = "Secure Chat <font color='rgb(130, 220, 120)'>Enabled</font>",
            Description = "For the interest of security and anonymity, secure chat has been enabled.",
            Icon = 10952973354
        }
    end

    local Bypasses = {

	["dick"] = "di一十ck",
	["dicks"] = "di一十cks",
	["cock"] = "co一十ck",
	["cocks"] = "co一十cks",
	["nigger"] = "ni一十gger",
	["niggers"] = "ni一十ggers",
	["niggas"] = "ni一十ggas",
	["nigga"] = "ni一十gga",
	["bitch"] = "bi一十tch",
	["dickhead"] = "di一十ck一十head",
	["fuck"] = "fu一十ck",
	["fucking"] = "fu一十ck一十ing",
	["fucker"] = "fu一十cker",
	["ass"] = "as一十s",
	["bitchass"] = "bit一十cha一十ss",
	["cunt"] = "cu一十nt",
	["cum"] = "c一十um",
	["cumming"] = "cu一十mming",
	["cummed"] = "cu一十mmed",
	["islam"] = "isl一十am",
	["christian"] = "christ一十ian",
	["bitches"] = "bit一十ches",
	["asses"] = "as一十se一十s",
	["retard"] = "re一十tard",
	["retarded"] = "reta一十rded",
	["jew"] = "j一十ew",
	["jewish"] = "je一十wish",
	["hitler"] = "hit一十ler",
	["stalin"] = "sta一十lin",
	["shit"] = "sh一十it",
	["mrdickinballs"] = "mrdi一十ck一十in一十ba一十lls",
	["sex"] = "se一十x",
	["sexy"] = "se一十xy",
	["horny"] = "horn一十y",
	["arse"] = "ar一十se",
	["hole"] = "ho一十le",
	["piss"] = "pi一十ss",
	["penis"] = "pen一十is",
	["pussy"] = "pu一十ssy",
	["puss"] = "pu一十ss",
	["rape"] = "ra一十pe",
	["raped"] = "ra一十ped",
	["rapist"] = "ra一十pist",
	["penisses"] = "pen一十isses",
	["cums"] = "c一十ums",
	["nut"] = "n一十ut",
	["nazi"] = "na一十zi",
	["nazist"] = "naz一十ist",
	["nazism"] = "naz一十ism",
	["motherfucker"] = "mot一十her f一十uc一十k一十er",
	["dadfucker"] = "dad f一十uc一十ker",
	["childporn"] = "childp一十orn",
	["pornhub"] = "p一十or一十nhub",
	["cornhub"] = "corn一十hub",
	["niggaporn"] = "ni一十gga一十p一十orn",
	["sexual"] = "se一十xual",
	["condom"] = "con一十dom",
	["condoms"] = "con一十doms",
	["sukaniqadik"] = "suka一十ni一十qad一十ik",
	["heil"] = "he一十il",
	["hail"] = "ha一十il",
	["transexual"] = "transs一十exu一十al",
	["masturbate"] = "mas一十tur一十bate",
	["masturbated"] = "mas一十tur一十ba一十ted",
	["jerk"] = "je一十rk",
	["pedo"] = "pe一十do",
	["pedos"] = "pe一十dos",
	["pedophiles"] = "pe一十do一十philes",
	["pedophile"] = "pe一十do一十phile",
	["kkk"] = "k一十kk",
	["retards"] = "re一十tards",
	["dickheads"] = "d",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",
	[""] = "",

-- Georgians suck dick





        ["can"] = "can"
    }

    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Remote = ReplicatedStorage:FindFirstChild("SayMessageRequest", true)

    local ChatBypass
    ChatBypass =
        hookmetamethod(
        Remote,
        "__namecall",
        function(self, ...)
            local Method = getnamecallmethod()
            local Arguments = {...}

            if self == Remote and Method == "FireServer" then
                local Message = Arguments[1]
                local Split = Message:split(" ")
                local FinalMessage = ""

                for _, x in next, Split do
                    for _, Bypass in next, Bypasses do
                        if x:lower() == _ then
                            if x:upper() ~= x then
                                Message = Message:gsub(x, Bypass)
                                FinalMessage = Message .. " " .. method
                            else
                                Message = Message:gsub(x, Bypass):upper()
                                FinalMessage = Message:gsub(x, Bypass):upper() .. " " .. method
                            end
                        end
                    end
                end

                if FinalMessage ~= "" then
                    Arguments[1] = FinalMessage
                end

                return ChatBypass(self, unpack(Arguments))
            end

            return ChatBypass(self, ...)
        end
    )

    if not LOADED then
        NotificationHolder:message {
            Title = "<font color='rgb(130, 220, 120)'>Credits</font>",
            Description = "FIRSTLY DISCOVERED WAS BY tav#8870. Bypasser was done by Decayed#5038 and AnthonyIsHere on V3rm. Modified by daddysyn, after than remodified Cyborg",
            Icon = 6023426926
        }

        wait(2.5)

        NotificationHolder:message {
            Title = "<font color='rgb(130, 220, 120)'>Credits</font>",
            Description = "Thanks to riptide for finding this! mwa riptide",
            Icon = 6023426926
        }

        wait(2.5)

        NotificationHolder:message {
            Title = "<font color='rgb(130, 220, 120)'>Credits</font>",
            Description = "Keep in mind that your sentences might get tagged because it is intentionally ## at the end.",
            Icon = 6023426926
        }
    end

    a:notify {
        Title = "Discord Server",
        Description = "Would you like to join the Discord Server?",
        Accept = {
            Text = "Yes",
            Callback = function()
                requestt(
                    {
                        Url = "http://127.0.0.1:6463/rpc?v=1",
                        Method = "POST",
                        Headers = {["Content-Type"] = "application/json", ["Origin"] = "https://discord.com"},
                        Body = game:GetService("HttpService"):JSONEncode(
                            {
                                cmd = "INVITE_BROWSER",
                                args = {code = "s4PxTVMUZp"},
                                nonce = game:GetService("HttpService"):GenerateGUID(false)
                            }
                        )
                    }
                )
            end
        },
        Dismiss = {
            Text = "No",
            Callback = function()
                NotificationHolder:message {
                    Title = "<font color='rgb(240,248,255)'>Warning</font>",
                    Description = "fuck you then im gonna invite you anyway bitch",
                    Icon = 10952973359
                }

                wait(0.5)
                requestt(
                    {
                        Url = "http://127.0.0.1:6463/rpc?v=1",
                        Method = "POST",
                        Headers = {["Content-Type"] = "application/json", ["Origin"] = "https://discord.com"},
                        Body = game:GetService("HttpService"):JSONEncode(
                            {
                                cmd = "INVITE_BROWSER",
                                args = {code = "s4PxTVMUZp"},
                                nonce = game:GetService("HttpService"):GenerateGUID(false)
                            }
                        )
                    }
                )
            end
        }
    }

    wait(10)
    NotificationHolder:message {
        Title = "<font color='rgb(240,248,255)'>Warning</font>",
        Description = "Bitch ass, scared to join",
        Icon = 10952973359
    }
    pcall(
        function()
            getgenv().LOADED = true
        end
    )
end

if filteredString == "####" then
    NotificationHolder:message {
        Title = "<font color='rgb(130, 220, 120)'>Failed</font>",
        Description = "Your account is under 13. Your account must be 13 or over in order to execute BetterBypasser.",
        Icon = 6023426926
    }
else
    execute()
end
-- Warnings and other stuff
--Don't execute this script 2 times, it will fuck it (most of the time)
--I only updated the method, I didn't typed the full script
--Subscribe to the MasterMZ or you are gay!!!11!1!
--If you find any errors, its most likely your account is 13<X , if you find a specific word that you can't say, dm me.
--I'll update this shit, its not FULLY finished

--Credits:
--Syn
--tav
--Decayed
--AnthonyIsHere
--Cyborg

